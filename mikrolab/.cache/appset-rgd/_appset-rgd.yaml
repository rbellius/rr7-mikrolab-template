apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: mikrolab-applicationset
  labels:
    app.kubernetes.io/name: mikrolab-applicationset
    app.kubernetes.io/instance: mikrolab-applicationset
    app.kubernetes.io/component: applicationset
    app.kubernetes.io/part-of: mikrolab
spec:
  schema:
    apiVersion: v1alpha1
    kind: AppSet
    spec:

      applications:
        - enabled: true
          name: mikrolab
          namespace: mikrolab
          repoURL: git@github.com:rbellius/resourcegraphdefinitions.git
          targetRevision: main
          path: rgds
          directory:
            recurse: true


  resources:
      - id: argocdApplication
        template:
          apiVersion: argoproj.io/v1alpha1
          kind: ApplicationSet
          metadata:
            name: ${{schema.metadata.name}}-applicationset
            namespace: argocd
          spec: 

            goTemplate: true
            # goTemplateOptions: ["missingkey=error"]
            generators:

            - list:
                elements:
                  - name: mikrolab
                    namespace: mikrolab
                    enabled: true
                    repoURL: git@github.com:rbellius/resourcegraphdefinitions.git
                    targetRevision: main
                    path: rgds
                    directory:
                      recurse: true

              selector:
                matchExpressions:
                  - key: enabled
                    operator: In
                    values:
                      - "true"
            template:

              metadata:
                name:                           '{{`{{ .name }}`}}'
                namespace:                      argocd 
                
                annotations:
                  argocd.argoproj.io/sync-wave: '{{`{{ .syncWave }}`}}'
                  argocd.argoproj.io/hook:      '{{`{{ .hook }}`}}'
                finalizers:
                - resources-finalizer.argocd.argoproj.io/foreground
                
                labels:
                  app.kubernetes.io/name:       '{{`{{ .name }}`}}'
                  app.kubernetes.io/instance:   '{{`{{ .namespace | default .name }}`}}'
                  app.kubernetes.io/component:  '{{`{{ .namespace }}`}}'
                  # app.kubernetes.io/part-of:    mikrolab
              spec:

                project:                        default

                syncPolicy:
                  automated:
                    selfHeal: true
                  syncOptions:

                    - CreateNamespace=true
                    # - ApplyOutOfSyncOnly=true

                destination:
                  server:                       https://kubernetes.default.svc
                  namespace:                    '{{`{{ .namespace | default .name }}`}}'

                source:
                    repoURL:                    '{{`{{ .repoURL }}`}}'
                    targetRevision:             '{{`{{ .targetRevision }}`}}'


            templatePatch: | 
              spec:
                source:

                {{`{{- if .chart }}`}}
                  chart:           {{`{{ .chart }}`}}
                {{`{{- end }}`}}
              
                {{`{{- if .path }}`}}
                  path:           {{`{{ .path }}`}}
                {{`{{- end }}`}}
              
                {{`{{- if .directory }}`}}
                  directory:
                    {{`{{- toYaml .directory | nindent 12 }}`}}
                {{`{{- end }}`}}

                {{`{{- if .values }}`}}
                  helm:
                    valuesObject:
                      {{`{{- toYaml .values | nindent 12 }}`}}
                {{`{{- end }}`}}

                {{`{{- if .parameters }}`}}
                  kustomize:
                    parameters:
                      {{`{{- toYaml .parameters | nindent 12 }}`}}
                {{`{{- end }}`}}

                {{`{{- if .syncWave }}`}}






